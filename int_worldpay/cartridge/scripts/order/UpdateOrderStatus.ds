/**
* Demandware Script File
* This script updates the OrderStatus,ExportStatus, PaymentStatus , ConfirmationStatus in Order 
* Object depending on the changed status notification recieved. It also prepends the status
* and timestamp to the statusHistory.  
*
* @input Order : dw.order.Order The order.
* @input response : Object
* @input updateStatus : String
* @input customObjectID :  String
*/

var Order = require('dw/order/Order');
var CustomObjectMgr = require('dw/object/CustomObjectMgr');
var Utils = require('int_worldpay/cartridge/scripts/common/Utils');
var WorldPayConstants = require('int_worldpay/cartridge/scripts/common/WorldPayConstants');
var Transaction = require('dw/system/Transaction');

function updateOrderStatus( orderToBeUpdated : Order, response : Object, updateStatus : String, customObjectID : String ) : Object
{   Transaction.begin();
    var notifyCO: CustomObject,
		customObj : String = customObjectID,
		COtimeStamp,
		order : Order = orderToBeUpdated,
		updateStatus=updateStatus,
		response = response;
	try {
		if(customObj==null){
			COtimeStamp=new Date();			
		}
		else{
		
			//Get Custom Object based on passed custom object id.		
			notifyCO=CustomObjectMgr.getCustomObject("OrderNotifyUpdates", customObj);
			if(notifyCO!=null && notifyCO!=""){
				COtimeStamp=notifyCO.custom.timeStamp;
				
			}
		}
			 var statusFound = false;
			 var statusHist : dw.util.ArrayList= order.custom.transactionStatus;
			 var statusList :dw.util.ArrayList;
			 if(statusHist==null && statusHist.length<0)
			 { 
			statusList=new dw.util.ArrayList();
			 }
			 else{	
		   	  statusList= new dw.util.ArrayList(statusHist);
		   	  var li:String="";
		   	  for( var ind in statusHist ) 
		   	  {
		   	  	 //li = statusHist[ind];
		   	  	 if (li.indexOf(updateStatus)>-1) {
		   	  	 	statusFound = true;
		   	  	 }
		   	  }
			 }
			 if (!statusFound) {
		   	 	statusList.addAt(0,updateStatus+":"+ COtimeStamp);
			 }
		   	 order.custom.transactionStatus=statusList;
		   	 
		   	 if(!empty(updateStatus)){
			 	order.custom.WorldPayLastEvent = updateStatus;
			 }
		   	 if(!empty(response.riskScore)){
			 	order.custom.riskScore = response.riskScore;
			 }
			 if(!empty(response.authID)){
			 	order.custom.authID = response.authID;
			 }
			 if(!empty(response.declineCode)){
			 	order.custom.declineCode = response.declineCode;
			 }
			 if(!empty(response.cardNumber)){
			 	order.custom.cardNumer = response.cardNumber;
			 }
			 if(!empty(response.cvcResultCode)){
			 	order.custom.cvcResultCode = response.cvcResultCode;
			 }
			 if(!empty(response.avsResultCode)){
			 	order.custom.avsResultCode = response.avsResultCode;
			 }
			 if(!empty(response.aaVAddressResultCode)){
			 	order.custom.aaVAddressResultCode = response.aaVAddressResultCode;
			 }
			 if(!empty(response.aaVPostcodeResultCode)){
			 	order.custom.aaVPostcodeResultCode = response.aaVPostcodeResultCode;
			 }
			 if(!empty(response.threeDSecureResult)){
			 	order.custom.issuerResponse = response.threeDSecureResult;
			 }
			 
		    if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.AUTHORISED','worldpay',null)){
				order.setStatus(Order.ORDER_STATUS_OPEN);
			  	order.setExportStatus(Order.EXPORT_STATUS_READY);
			   	//order.setPaymentStatus(Order.PAYMENT_STATUS_NOTPAID);
			   	order.setConfirmationStatus(Order.CONFIRMATION_STATUS_CONFIRMED); 
			 }
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.REFUSED','worldpay',null))
			{
				//No Change-Fail Order pipelet already called
				}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.CANCELLED','worldpay',null)){
				if(order.getStatus()==Order.ORDER_STATUS_NEW ||order.getStatus()==Order.ORDER_STATUS_OPEN) {
					order.setStatus(Order.ORDER_STATUS_CANCELLED);
				}
				else if(order.getStatus()==Order.ORDER_STATUS_CREATED){
					order.setStatus(Order.ORDER_STATUS_FAILED);
				}
				order.setExportStatus(Order.EXPORT_STATUS_NOTEXPORTED);
			  	order.setPaymentStatus(Order.PAYMENT_STATUS_NOTPAID);
			   	order.setConfirmationStatus(Order.CONFIRMATION_STATUS_NOTCONFIRMED); 
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.CAPTURED','worldpay',null)){
			  	order.setStatus(Order.ORDER_STATUS_COMPLETED);
			 	order.setPaymentStatus(Order.PAYMENT_STATUS_PAID);
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.SENT_FOR_REFUND','worldpay',null)){
				//No Change
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.SETTLED','worldpay',null)){
				//No Change
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.INFORMATION_REQUESTED','worldpay',null)){
				//No Change
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.CHARGED_BACK','worldpay',null)){
				//No Change
			}
			else if(updateStatus==dw.web.Resource.msg('notification.paymentStatus.EXPIRED','worldpay',null)){
				if(order.getStatus()==Order.ORDER_STATUS_NEW ||order.getStatus()==Order.ORDER_STATUS_OPEN) {
					order.setStatus(Order.ORDER_STATUS_CANCELLED);
					order.setExportStatus(Order.EXPORT_STATUS_NOTEXPORTED);
				  	order.setPaymentStatus(Order.PAYMENT_STATUS_NOTPAID);
				   	order.setConfirmationStatus(Order.CONFIRMATION_STATUS_NOTCONFIRMED);
				}
			}
		    else{
		   	//No Change
		    }
		Transaction.commit();    
	 	return {success:true};
		
	}catch(e){
		  var errorCode=WorldPayConstants.NOTIFYERRORCODE116;
		  var errorMessage : String = Utils.getErrorMessage(errorCode);
     	  dw.system.Logger.getLogger("worldpay").error("Order Notification : Update Order : "+ order.orderNo + " : " +errorCode+" : " +errorMessage + e);
     	  Transaction.commit();
	      return {success:false};
	}	

}

/** Exported functions **/
module.exports = {
    updateOrderStatus: updateOrderStatus
};